version: '3.8'

services:
  portal:
    env_file:
      - .env
    build:
      context: ./portal
      target: development
    restart: always
    ports:
      - ${PORTAL_PORT}:3000
    environment:
      NODE_ENV: development
    stdin_open: true
    volumes:
      - ./portal:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next

  mongo-express:
    env_file:
      - .env
    image: mongo-express
    depends_on:
      - omnisdb
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${MONGO_DSN}

  gateway:
    env_file:
      - .env
    build:
      context: ./gateway
      target: development
    restart: always
    ports:
      - ${GATEWAY_PORT}:3000
    environment:
      NODE_ENV: development
    stdin_open: true
    volumes:
      - ./gateway:/usr/src/app
      - /usr/src/app/node_modules
  # meetings:
  #   build:
  #     context: ./meetings
  #   depends_on:
  #     - rabbitmq
  #     - omnisdb
  #   container_name: meetings
  #   ports:
  #     - 9230:9229
  #   restart: always
  #   stdin_open: true
  #   environment:
  #     MONGO_DSN: ${MONGO_DSN}
  #     RABBITMQ_DSN: ${RABBITMQ_DSN}
  #   volumes:
  #     - ./meetings:/usr/src/app
  #     - /usr/src/app/node_modules

  # signal:
  #   build:
  #     context: ./signal
  #   container_name: signal
  #   ports:
  #     - ${SIGNAL_PORT}:3000
  #     - 9231:9229
  #   restart: always
  #   stdin_open: true
  #   volumes:
  #     - ./signal:/usr/src/app
  #     - /usr/src/app/node_modules

  recruitment:
    env_file:
      - .env
    build:
      context: ./recruitment
      target: development
    ports:
      - 9232:9229
    restart: always
    stdin_open: true
    environment:
      NODE_ENV: development
    volumes:
      - ./recruitment:/usr/src/app
      - /usr/src/app/node_modules
